volumes:
  ssk_product_data_python:
    name: ssk_product_data_python
    driver: local
  ssk_localstack_data_python:
    name: ssk_localstack_data_python
    driver: local

networks:
  ssk_product_network_python:
    driver: bridge

services:
  app:
    image: ciceroreis/python:3.9
    container_name: api
    ports:
      - "5000:5000"
    volumes:
      - .:/application
    stdin_open: true
    environment:
      FLASK_ENV: ${FLASK_ENV}
    depends_on:
      - mysql
    networks:
      - ssk_product_network_python

  mysql:
    image: mysql:8.0
    container_name: db
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ssk_product_data_python:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - ssk_product_network_python

  localstack:
    image: localstack/localstack
    container_name: ssk_localstack
    ports:
        - "127.0.0.1:4566:4566"
        - "127.0.0.1:4510-4559:4510-4559"
    environment:
        - DEBUG=1
    extra_hosts:
        - "host.docker.internal:host-gateway"
    volumes:
        - ssk_localstack_data_python:/var/lib/localstack
        - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
        - ssk_product_network_python

  mongodb:
    image: mongo:6.0
    container_name: ssk_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: ssk_orders
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ssk_product_data_python:/data/db
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    ports:
      - "27017:27017"
    networks:
      - ssk_product_network_python
