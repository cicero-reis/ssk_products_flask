#!/bin/bash
set -e

# üé® Cores
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[1;34m'
NC='\033[0m' # Sem cor

PYTHON=$(which python)
TIMESTAMP=$(date +%Y-%m-%d_%H-%M-%S)
LOG_DIR="logs"
LOG_FILE="$LOG_DIR/verificacao_$TIMESTAMP.log"

mkdir -p "$LOG_DIR"

echo -e "${BLUE}üêç Usando Python: $PYTHON${NC}" | tee -a "$LOG_FILE"
echo -e "${BLUE}üîç=============================================${NC}" | tee -a "$LOG_FILE"
echo -e "${BLUE}üîç Executando verifica√ß√µes de qualidade de c√≥digo${NC}" | tee -a "$LOG_FILE"
echo -e "${BLUE}üîç=============================================${NC}" | tee -a "$LOG_FILE"

# Verifica se as ferramentas est√£o instaladas
check_tool() {
    if ! $PYTHON -m "$1" --version &>/dev/null; then
        echo -e "${RED}‚ùå Ferramenta '$1' n√£o encontrada. Instale com: pip install $1${NC}" | tee -a "$LOG_FILE"
        exit 1
    fi
}

for tool in ruff mypy bandit pylint; do
    check_tool $tool
done

echo -e "\n${YELLOW}üßπ 1. Verificando formata√ß√£o e linting com Ruff...${NC}" | tee -a "$LOG_FILE"
echo "   ‚úèÔ∏è  1.1. Corrigindo problemas automaticamente..." | tee -a "$LOG_FILE"
$PYTHON -m ruff check --fix src/ 2>&1 | tee -a "$LOG_FILE" || echo -e "${YELLOW}‚ö†Ô∏è  Problemas corrigidos automaticamente.${NC}" | tee -a "$LOG_FILE"

echo "   üîç 1.2. Verificando problemas restantes..." | tee -a "$LOG_FILE"
$PYTHON -m ruff check src/ 2>&1 | tee -a "$LOG_FILE" || echo -e "${YELLOW}‚ö†Ô∏è  Ainda existem problemas de linting.${NC}" | tee -a "$LOG_FILE"

echo -e "\n${YELLOW}üìê 2. Verificando erros de tipagem com mypy...${NC}" | tee -a "$LOG_FILE"
$PYTHON -m mypy src/ 2>&1 | tee -a "$LOG_FILE" || echo -e "${YELLOW}‚ö†Ô∏è  Verifique os erros de tipagem acima.${NC}" | tee -a "$LOG_FILE"

echo -e "\n${YELLOW}üîí 3. Verificando vulnerabilidades com Bandit...${NC}" | tee -a "$LOG_FILE"
$PYTHON -m bandit -r src/ 2>&1 | tee -a "$LOG_FILE" || echo -e "${YELLOW}‚ö†Ô∏è  Vulnerabilidades encontradas.${NC}" | tee -a "$LOG_FILE"

echo -e "\n${YELLOW}üß† 4. Verificando boas pr√°ticas com Pylint...${NC}" | tee -a "$LOG_FILE"
$PYTHON -m pylint src/ 2>&1 | tee -a "$LOG_FILE" || echo -e "${YELLOW}‚ö†Ô∏è  Pylint encontrou sugest√µes ou problemas.${NC}" | tee -a "$LOG_FILE"

echo -e "\n${GREEN}‚úÖ=============================================${NC}" | tee -a "$LOG_FILE"
echo -e "${GREEN}‚úÖ Verifica√ß√µes completas! Veja os resultados acima.${NC}" | tee -a "$LOG_FILE"
echo -e "${GREEN}‚úÖ Log salvo em: $LOG_FILE${NC}" | tee -a "$LOG_FILE"
